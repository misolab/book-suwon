DROP TABLE TB_MEMBER IF EXISTS;

create table TB_MEMBER (
    ID bigint generated by default as identity,
    USERNAME varchar(255) not null,
    X_TOKEN varchar(255),
    ROLES varchar(255),
    ALLOW_IP varchar(255),
    ERROR_COUNT integer default 0,
    primary key (ID)
);
create index IDX_USERNAME on TB_MEMBER (USERNAME);

INSERT INTO TB_MEMBER (USERNAME, ROLES, ALLOW_IP) VALUES ('gauss', 'MANAGER', '127.0.0.1,0:0:0:0:0:0:0:1');


create table tbl_user (
    id bigint generated by default as identity,
    created_date timestamp,
    modified_date timestamp,
    user_id varchar(80) not null,
    user_name varchar(80),
    user_no varchar(16),
    user_token varchar(1024),
    primary key (id),
    unique key user_id (user_id)
);

create unique index idx_user_user_id on tbl_user (user_id);


CREATE TABLE SPRING_SESSION (
	PRIMARY_ID CHAR(36) NOT NULL,
	SESSION_ID CHAR(36) NOT NULL,
	CREATION_TIME BIGINT NOT NULL,
	LAST_ACCESS_TIME BIGINT NOT NULL,
	MAX_INACTIVE_INTERVAL INT NOT NULL,
	EXPIRY_TIME BIGINT NOT NULL,
	PRINCIPAL_NAME VARCHAR(100),
	CONSTRAINT SPRING_SESSION_PK PRIMARY KEY (PRIMARY_ID)
);

CREATE UNIQUE INDEX SPRING_SESSION_IX1 ON SPRING_SESSION (SESSION_ID);
CREATE INDEX SPRING_SESSION_IX2 ON SPRING_SESSION (EXPIRY_TIME);
CREATE INDEX SPRING_SESSION_IX3 ON SPRING_SESSION (PRINCIPAL_NAME);

CREATE TABLE SPRING_SESSION_ATTRIBUTES (
	SESSION_PRIMARY_ID CHAR(36) NOT NULL,
	ATTRIBUTE_NAME VARCHAR(200) NOT NULL,
	ATTRIBUTE_BYTES LONGVARBINARY NOT NULL,
	CONSTRAINT SPRING_SESSION_ATTRIBUTES_PK PRIMARY KEY (SESSION_PRIMARY_ID, ATTRIBUTE_NAME),
	CONSTRAINT SPRING_SESSION_ATTRIBUTES_FK FOREIGN KEY (SESSION_PRIMARY_ID) REFERENCES SPRING_SESSION(PRIMARY_ID) ON DELETE CASCADE
);